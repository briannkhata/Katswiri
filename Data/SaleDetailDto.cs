//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class SaleDetailDto
    {
        
        //Default Constructor
        public SaleDetailDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<SaleDetailDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.SaleDetailsId).NotNull();
                RuleFor(x => x.SaleId).NotNull();
                RuleFor(x => x.ProductId).NotNull();
                RuleFor(x => x.SellingPrice).NotNull();
                RuleFor(x => x.DiscountPercent).NotNull();
                RuleFor(x => x.DiscountAmount).NotNull();
                RuleFor(x => x.SoldPrice).NotNull();
                RuleFor(x => x.ShopId).NotNull();
                RuleFor(x => x.Qty).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts SaleDetail Dto to SaleDetail EF Model
        /// </summary>
        /// <returns>SaleDetail EF model</returns>
        public SaleDetail ToEFModel()
        {
            var model = new SaleDetail();
            model.SaleDetailsId = this.SaleDetailsId;
            model.SaleId = this.SaleId;
            model.ProductId = this.ProductId;
            model.SellingPrice = this.SellingPrice;
            model.DiscountPercent = this.DiscountPercent;
            model.DiscountAmount = this.DiscountAmount;
            model.SoldPrice = this.SoldPrice;
            model.ShopId = this.ShopId;
            model.Qty = this.Qty;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a SaleDetail Entity Model
        /// </summary>
        /// <param name="model">SaleDetail model</param>
        /// <returns>SaleDetail Dto</returns>
        public static SaleDetailDto FromEFModel(SaleDetail model)
        {
            if(model == null) return null;
            var dto = new SaleDetailDto();
            dto.SaleDetailsId = model.SaleDetailsId;
            dto.SaleId = model.SaleId;
            dto.ProductId = model.ProductId;
            dto.SellingPrice = model.SellingPrice;
            dto.DiscountPercent = model.DiscountPercent;
            dto.DiscountAmount = model.DiscountAmount;
            dto.SoldPrice = model.SoldPrice;
            dto.ShopId = model.ShopId;
            dto.Qty = model.Qty;
            return dto;
        }
    
    
        public int SaleDetailsId { get; set; }
        public int SaleId { get; set; }
        public int ProductId { get; set; }
        public double SellingPrice { get; set; }
        public double DiscountPercent { get; set; }
        public double DiscountAmount { get; set; }
        public double SoldPrice { get; set; }
        public int ShopId { get; set; }
        public double Qty { get; set; }
    }
}
