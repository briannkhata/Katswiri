//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class PaymentTypeDto
    {
        
        //Default Constructor
        public PaymentTypeDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<PaymentTypeDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.PaymentTypeId).NotNull();
                RuleFor(x => x.PaymentTypeName).MaximumLength(50).NotEmpty();
                RuleFor(x => x.Deleted).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts PaymentType Dto to PaymentType EF Model
        /// </summary>
        /// <returns>PaymentType EF model</returns>
        public PaymentType ToEFModel()
        {
            var model = new PaymentType();
            model.PaymentTypeId = this.PaymentTypeId;
            model.PaymentTypeName = this.PaymentTypeName;
            model.Description = this.Description;
            model.Deleted = this.Deleted;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a PaymentType Entity Model
        /// </summary>
        /// <param name="model">PaymentType model</param>
        /// <returns>PaymentType Dto</returns>
        public static PaymentTypeDto FromEFModel(PaymentType model)
        {
            if(model == null) return null;
            var dto = new PaymentTypeDto();
            dto.PaymentTypeId = model.PaymentTypeId;
            dto.PaymentTypeName = model.PaymentTypeName;
            dto.Description = model.Description;
            dto.Deleted = model.Deleted;
            return dto;
        }
    
    
        public int PaymentTypeId { get; set; }
        public string PaymentTypeName { get; set; }
        public string Description { get; set; }
        public int Deleted { get; set; }
    }
}
