//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class MenuDto
    {
        
        //Default Constructor
        public MenuDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<MenuDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.MenuId).NotNull();
                RuleFor(x => x.ProductId).NotNull();
                RuleFor(x => x.Qty).NotNull();
                RuleFor(x => x.Cost).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts Menu Dto to Menu EF Model
        /// </summary>
        /// <returns>Menu EF model</returns>
        public Menu ToEFModel()
        {
            var model = new Menu();
            model.MenuId = this.MenuId;
            model.ProductId = this.ProductId;
            model.Qty = this.Qty;
            model.Cost = this.Cost;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a Menu Entity Model
        /// </summary>
        /// <param name="model">Menu model</param>
        /// <returns>Menu Dto</returns>
        public static MenuDto FromEFModel(Menu model)
        {
            if(model == null) return null;
            var dto = new MenuDto();
            dto.MenuId = model.MenuId;
            dto.ProductId = model.ProductId;
            dto.Qty = model.Qty;
            dto.Cost = model.Cost;
            return dto;
        }
    
    
        public int MenuId { get; set; }
        public int ProductId { get; set; }
        public double Qty { get; set; }
        public double Cost { get; set; }
    }
}
