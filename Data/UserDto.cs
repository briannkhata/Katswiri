//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class UserDto
    {
        
        //Default Constructor
        public UserDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<UserDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.UserId).NotNull();
                RuleFor(x => x.Name).MaximumLength(50).NotEmpty();
                RuleFor(x => x.Gender).MaximumLength(50).NotEmpty();
                RuleFor(x => x.UserName).MaximumLength(50).NotEmpty();
                RuleFor(x => x.PassWord).MaximumLength(50).NotEmpty();
                RuleFor(x => x.ShopId).NotNull();
                RuleFor(x => x.Email).MaximumLength(50).NotEmpty();
                RuleFor(x => x.AltEmail).MaximumLength(50);
                RuleFor(x => x.Phone).MaximumLength(50).NotEmpty();
                RuleFor(x => x.AltPhone).MaximumLength(50);
                RuleFor(x => x.Deleted).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts User Dto to User EF Model
        /// </summary>
        /// <returns>User EF model</returns>
        public User ToEFModel()
        {
            var model = new User();
            model.UserId = this.UserId;
            model.Name = this.Name;
            model.Gender = this.Gender;
            model.UserName = this.UserName;
            model.PassWord = this.PassWord;
            model.ShopId = this.ShopId;
            model.Email = this.Email;
            model.AltEmail = this.AltEmail;
            model.Phone = this.Phone;
            model.AltPhone = this.AltPhone;
            model.PhysicalAddress = this.PhysicalAddress;
            model.ContactAddress = this.ContactAddress;
            model.Deleted = this.Deleted;
            model.RoleId = this.RoleId;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a User Entity Model
        /// </summary>
        /// <param name="model">User model</param>
        /// <returns>User Dto</returns>
        public static UserDto FromEFModel(User model)
        {
            if(model == null) return null;
            var dto = new UserDto();
            dto.UserId = model.UserId;
            dto.Name = model.Name;
            dto.Gender = model.Gender;
            dto.UserName = model.UserName;
            dto.PassWord = model.PassWord;
            dto.ShopId = model.ShopId;
            dto.Email = model.Email;
            dto.AltEmail = model.AltEmail;
            dto.Phone = model.Phone;
            dto.AltPhone = model.AltPhone;
            dto.PhysicalAddress = model.PhysicalAddress;
            dto.ContactAddress = model.ContactAddress;
            dto.Deleted = model.Deleted;
            dto.RoleId = model.RoleId;
            return dto;
        }
    
    
        public int UserId { get; set; }
        public string Name { get; set; }
        public string Gender { get; set; }
        public string UserName { get; set; }
        public string PassWord { get; set; }
        public int ShopId { get; set; }
        public string Email { get; set; }
        public string AltEmail { get; set; }
        public string Phone { get; set; }
        public string AltPhone { get; set; }
        public string PhysicalAddress { get; set; }
        public string ContactAddress { get; set; }
        public int Deleted { get; set; }
        public Nullable<int> RoleId { get; set; }
    }
}
