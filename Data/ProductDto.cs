//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class ProductDto
    {
        
        //Default Constructor
        public ProductDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<ProductDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.ProductId).NotNull();
                RuleFor(x => x.ProductCode).MaximumLength(50).NotEmpty();
                RuleFor(x => x.ProductName).MaximumLength(50).NotEmpty();
                RuleFor(x => x.UnitId).NotNull();
                RuleFor(x => x.CategoryId).NotNull();
                RuleFor(x => x.SellingPrice).NotNull();
                RuleFor(x => x.ShopId).NotNull();
                RuleFor(x => x.Deleted).NotNull();
                RuleFor(x => x.TaxTypeId).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts Product Dto to Product EF Model
        /// </summary>
        /// <returns>Product EF model</returns>
        public Product ToEFModel()
        {
            var model = new Product();
            model.ProductId = this.ProductId;
            model.ProductCode = this.ProductCode;
            model.ProductName = this.ProductName;
            model.BarCode = this.BarCode;
            model.UnitId = this.UnitId;
            model.CategoryId = this.CategoryId;
            model.SellingPrice = this.SellingPrice;
            model.ShopId = this.ShopId;
            model.Deleted = this.Deleted;
            model.TaxTypeId = this.TaxTypeId;
            model.BrandId = this.BrandId;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a Product Entity Model
        /// </summary>
        /// <param name="model">Product model</param>
        /// <returns>Product Dto</returns>
        public static ProductDto FromEFModel(Product model)
        {
            if(model == null) return null;
            var dto = new ProductDto();
            dto.ProductId = model.ProductId;
            dto.ProductCode = model.ProductCode;
            dto.ProductName = model.ProductName;
            dto.BarCode = model.BarCode;
            dto.UnitId = model.UnitId;
            dto.CategoryId = model.CategoryId;
            dto.SellingPrice = model.SellingPrice;
            dto.ShopId = model.ShopId;
            dto.Deleted = model.Deleted;
            dto.TaxTypeId = model.TaxTypeId;
            dto.BrandId = model.BrandId;
            return dto;
        }
    
    
        public int ProductId { get; set; }
        public string ProductCode { get; set; }
        public string ProductName { get; set; }
        public string BarCode { get; set; }
        public int UnitId { get; set; }
        public int CategoryId { get; set; }
        public double SellingPrice { get; set; }
        public int ShopId { get; set; }
        public int Deleted { get; set; }
        public int TaxTypeId { get; set; }
        public Nullable<int> BrandId { get; set; }
    }
}
