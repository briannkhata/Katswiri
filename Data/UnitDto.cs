//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Katswiri.Data
{
    using System;
    using System.Collections.Generic;
    
    using FluentValidation.Internal;
    using FluentValidation.Resources;
    using FluentValidation.Results;
    using FluentValidation;
    using FluentValidation.Validators;
    
     public partial class UnitDto
    {
        
        //Default Constructor
        public UnitDto(){}
        
        public  class AbstractValidatorEF : AbstractValidator<UnitDto>
        {
            public AbstractValidatorEF()
            {
              SetValidationRules();
            }
            
            public virtual void SetValidationRules()
            {
                RuleFor(x => x.UnitId).NotNull();
                RuleFor(x => x.UnitName).MaximumLength(50).NotEmpty();
                RuleFor(x => x.SubUnit).MaximumLength(50).NotEmpty();
                RuleFor(x => x.UnitValue).NotNull();
                RuleFor(x => x.SubUnitValue).NotNull();
                RuleFor(x => x.Deleted).NotNull();
               
            }
       
        }
    
        
        
        
        /// <summary>
        /// Converts Unit Dto to Unit EF Model
        /// </summary>
        /// <returns>Unit EF model</returns>
        public Unit ToEFModel()
        {
            var model = new Unit();
            model.UnitId = this.UnitId;
            model.UnitName = this.UnitName;
            model.SubUnit = this.SubUnit;
            model.UnitValue = this.UnitValue;
            model.SubUnitValue = this.SubUnitValue;
            model.Deleted = this.Deleted;
            return model;
        }
    
    
        // <summary>
        /// Creates a Dto from a Unit Entity Model
        /// </summary>
        /// <param name="model">Unit model</param>
        /// <returns>Unit Dto</returns>
        public static UnitDto FromEFModel(Unit model)
        {
            if(model == null) return null;
            var dto = new UnitDto();
            dto.UnitId = model.UnitId;
            dto.UnitName = model.UnitName;
            dto.SubUnit = model.SubUnit;
            dto.UnitValue = model.UnitValue;
            dto.SubUnitValue = model.SubUnitValue;
            dto.Deleted = model.Deleted;
            return dto;
        }
    
    
        public int UnitId { get; set; }
        public string UnitName { get; set; }
        public string SubUnit { get; set; }
        public double UnitValue { get; set; }
        public double SubUnitValue { get; set; }
        public int Deleted { get; set; }
    }
}
